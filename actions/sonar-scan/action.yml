name: 'judopay/sonar-scan'
description: 'Run a SonarCloud scan'
inputs:
  sonar-token:
    description: 'Token to authenticate with SonarCloud'
    required: true
  uses-xccov:
    description: 'Whether to convert XCCov coverage files to SonarQube format'
    required: false
    default: 'false'
runs:
  using: composite
  steps:
  - name: Install XCCov to SonarQube Converter
    if: inputs.uses-xccov == 'true' 
    uses: ethanjli/cached-download-action@v0.1.2
    id: install-xccov
    with:
      url: https://raw.githubusercontent.com/SonarSource/sonar-scanning-examples/1dd2b1b4736cc3be4d714770d469ed7c59deec1b/swift-coverage/swift-coverage-example/xccov-to-sonarqube-generic.sh
      destination: ${{ runner.temp }}/sonar/xccov-to-sonarqube-generic.sh
  - name: Prepare for Sonar Scan
    id: sonar-prep
    run: prep.sh
    shell: bash
  - name: Sonar Scan Pull Request
    if: ${{ github.event_name == 'pull_request' }}
    uses: SonarSource/sonarqube-scan-action@v4
    env:
      SONAR_TOKEN: ${{ inputs.sonar-token }}
    with:
      args: >
        -Dproject.settings=.sonarscan
        -Dsonar.cfamily.cache.enabled=false
        -Dsonar.cfamily.compile-commands=${{ steps.sonar-prep.outputs.COMPILE_COMMANDS_FILE }}
        -Dsonar.coverageReportPaths=${{ steps.sonar-prep.outputs.GENERIC_COVERAGE_FILE }}
        -Dsonar.organization=judopay
        -Dsonar.projectKey=${{ steps.sonar-prep.outputs.PROJECT_KEY }}
        -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }}
        -Dsonar.pullrequest.branch=${{ github.ref_name }}
        -Dsonar.pullrequest.github.repository=${{ github.repository }}
        -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
        -Dsonar.pullrequest.provider=GitHub
        -Dsonar.sources=${{ github.workspace }}
  - name: Sonar Scan Main Branch
    if: ${{ github.event_name == 'push' && github.ref_name == 'master' }}
    uses: SonarSource/sonarqube-scan-action@v4
    env:
      SONAR_TOKEN: ${{ inputs.sonar-token }}
    with:
      args: >
        -Dproject.settings=.sonarscan
        -Dsonar.cfamily.cache.enabled=false
        -Dsonar.cfamily.compile-commands=${{ steps.sonar-prep.outputs.COMPILE_COMMANDS_FILE }}
        -Dsonar.coverageReportPaths=${{ steps.sonar-prep.outputs.GENERIC_COVERAGE_FILE }}
        -Dsonar.organization=judopay
        -Dsonar.projectKey=${{ steps.sonar-prep.outputs.PROJECT_KEY }}
        -Dsonar.sources=${{ github.workspace }}
